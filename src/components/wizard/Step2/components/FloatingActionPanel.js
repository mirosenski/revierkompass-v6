import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion, AnimatePresence } from 'framer-motion';
import { Trash2 } from 'lucide-react';
const FloatingActionPanel = ({ isPanelOpen, setIsPanelOpen, isLoading, totalSelected, selectedStations, selectedCustomAddresses, stations, customAddresses, onStationToggle, onCustomToggle }) => {
    return (_jsxs(motion.div, { initial: { y: 300 }, animate: { y: isPanelOpen ? 0 : 240 }, drag: "y", dragConstraints: { top: 0, bottom: 240 }, className: "fixed bottom-0 left-0 right-0 bg-white/95 dark:bg-gray-900/95 backdrop-blur-xl rounded-t-3xl shadow-2xl z-50 border-t border-gray-200 dark:border-gray-700", children: [_jsx("div", { className: "w-12 h-1.5 bg-gray-300 dark:bg-gray-600 rounded-full mx-auto mt-3 cursor-grab active:cursor-grabbing" }), _jsxs("div", { className: "px-6 py-4 flex justify-between items-center", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [isLoading ? (_jsx("div", { className: "animate-spin rounded-full h-6 w-6 border-2 border-blue-600 border-t-transparent" })) : (_jsx("div", { className: "text-2xl font-bold text-gray-900 dark:text-white", children: totalSelected })), _jsx("div", { className: "text-sm text-gray-500 dark:text-gray-400", children: isLoading ? 'Routen werden berechnet...' : 'Ziele ausgewÃ¤hlt' })] }), _jsx("div", { className: "flex items-center space-x-3", children: _jsx("button", { onClick: () => setIsPanelOpen(!isPanelOpen), className: "px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors", children: isPanelOpen ? 'Verstecken' : 'Details' }) })] }), _jsx(AnimatePresence, { children: isPanelOpen && (_jsxs(motion.div, { className: "px-6 pb-6 max-h-96 overflow-y-auto", initial: { opacity: 0, height: 0 }, animate: { opacity: 1, height: 'auto' }, exit: { opacity: 0, height: 0 }, children: [_jsx("h3", { className: "font-semibold mb-3 text-gray-900 dark:text-white", children: "Ausgew\u00E4hlte Ziele:" }), _jsxs("div", { className: "space-y-2", children: [selectedStations.map(id => {
                                    const station = stations.find(s => s.id === id);
                                    return station ? (_jsxs("div", { className: "p-3 bg-gray-50 dark:bg-gray-700 rounded-lg text-sm flex justify-between items-center", children: [_jsx("span", { className: "text-gray-900 dark:text-white", children: station.name }), _jsx("button", { onClick: () => onStationToggle(id), className: "text-red-500 hover:text-red-700 transition-colors", children: _jsx(Trash2, { className: "h-4 w-4" }) })] }, id)) : null;
                                }), selectedCustomAddresses.map(id => {
                                    const address = customAddresses.find(a => a.id === id);
                                    return address ? (_jsxs("div", { className: "p-3 bg-gray-50 dark:bg-gray-700 rounded-lg text-sm flex justify-between items-center", children: [_jsx("span", { className: "text-gray-900 dark:text-white", children: address.name }), _jsx("button", { onClick: () => onCustomToggle(id), className: "text-red-500 hover:text-red-700 transition-colors", children: _jsx(Trash2, { className: "h-4 w-4" }) })] }, id)) : null;
                                })] })] })) })] }));
};
export default FloatingActionPanel;
