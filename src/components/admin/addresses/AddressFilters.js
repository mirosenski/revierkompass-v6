import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Search, Filter, X } from 'lucide-react';
const AddressFilters = ({ filters, onFilterChange, onClearFilters, allCities, hasActiveFilters, filteredAddressesCount }) => {
    return (_jsxs("div", { className: "bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6", children: [_jsxs("div", { className: "flex flex-col lg:flex-row gap-4", children: [_jsx("div", { className: "flex-1", children: _jsxs("div", { className: "relative", children: [_jsx(Search, { className: "absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" }), _jsx("input", { type: "text", placeholder: "Adressen durchsuchen...", value: filters.search, onChange: (e) => onFilterChange('search', e.target.value), className: "w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-transparent" })] }) }), _jsx("div", { className: "w-full lg:w-48", children: _jsxs("select", { value: filters.city, onChange: (e) => onFilterChange('city', e.target.value), className: "w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-indigo-500 focus:border-transparent", children: [_jsx("option", { value: "", children: "Alle St\u00E4dte" }), allCities.map((city) => (_jsx("option", { value: city, children: city }, city)))] }) }), _jsx("div", { className: "w-full lg:w-48", children: _jsxs("select", { value: filters.status, onChange: (e) => onFilterChange('status', e.target.value), className: "w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-indigo-500 focus:border-transparent", children: [_jsx("option", { value: "all", children: "Alle Status" }), _jsx("option", { value: "pending", children: "Ausstehend" }), _jsx("option", { value: "approved", children: "Genehmigt" }), _jsx("option", { value: "rejected", children: "Abgelehnt" })] }) }), hasActiveFilters && (_jsxs("button", { onClick: onClearFilters, className: "flex items-center gap-2 px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors", children: [_jsx(X, { className: "w-4 h-4" }), "Filter l\u00F6schen"] }))] }), _jsx("div", { className: "mt-4 pt-4 border-t border-gray-200 dark:border-gray-700", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400", children: [_jsx(Filter, { className: "w-4 h-4" }), _jsxs("span", { children: [filteredAddressesCount, " Adressen gefunden"] })] }), hasActiveFilters && (_jsxs("div", { className: "flex items-center gap-2 text-xs", children: [_jsx("span", { className: "text-gray-500 dark:text-gray-400", children: "Aktive Filter:" }), filters.search && (_jsxs("span", { className: "px-2 py-1 bg-indigo-100 dark:bg-indigo-900/20 text-indigo-700 dark:text-indigo-300 rounded", children: ["Suche: \"", filters.search, "\""] })), filters.city && (_jsxs("span", { className: "px-2 py-1 bg-indigo-100 dark:bg-indigo-900/20 text-indigo-700 dark:text-indigo-300 rounded", children: ["Stadt: ", filters.city] })), filters.status !== 'all' && (_jsxs("span", { className: "px-2 py-1 bg-indigo-100 dark:bg-indigo-900/20 text-indigo-700 dark:text-indigo-300 rounded", children: ["Status: ", filters.status] }))] }))] }) })] }));
};
export default AddressFilters;
